"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(preview)/feed/page",{

/***/ "(app-pages-browser)/./lib/client-helper.ts":
/*!******************************!*\
  !*** ./lib/client-helper.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   blobToPreview: function() { return /* binding */ blobToPreview; },\n/* harmony export */   downloadImage: function() { return /* binding */ downloadImage; },\n/* harmony export */   getBlob: function() { return /* binding */ getBlob; },\n/* harmony export */   getExtension: function() { return /* binding */ getExtension; },\n/* harmony export */   previewToBlob: function() { return /* binding */ previewToBlob; }\n/* harmony export */ });\n/* harmony import */ var _components_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/components/constant */ \"(app-pages-browser)/./components/constant.ts\");\n/* harmony import */ var _components_ui_use_toast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/ui/use-toast */ \"(app-pages-browser)/./components/ui/use-toast.ts\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/.pnpm/axios@1.6.2/node_modules/axios/lib/axios.js\");\nconst blobToPreview = async (blob)=>{\n    if (!blob) {\n        return false;\n    }\n    const isBlob = (value)=>value instanceof Blob;\n    try {\n        if (isBlob(blob)) {\n            const reader = new FileReader();\n            const result = await new Promise((resolve, reject)=>{\n                reader.onload = (event)=>{\n                    if (!event.target || !event.target.result) {\n                        reject(new Error(\"No event target or result\"));\n                    } else {\n                        resolve(event.target.result);\n                    }\n                };\n                reader.readAsDataURL(blob);\n            });\n            return result;\n        } else {\n            throw new Error(\"Image is not in Blob format\");\n        }\n    } catch (error) {\n        return false;\n    }\n};\n\n\n\nconst previewToBlob = (preview)=>{\n    if (!preview) return false;\n    const isBase64 = (str)=>str.indexOf(\"data:\") !== -1;\n    function dataURLtoBlob(dataURL) {\n        const [, mimeType, base64Data] = dataURL.match(/^data:(.*?);base64,(.*)$/) || [];\n        const binaryData = atob(base64Data);\n        const arrayBuffer = new ArrayBuffer(binaryData.length);\n        const view = new Uint8Array(arrayBuffer);\n        for(let i = 0; i < binaryData.length; i += 1){\n            view[i] = binaryData.charCodeAt(i);\n        }\n        return new Blob([\n            arrayBuffer\n        ], {\n            type: mimeType\n        });\n    }\n    const fetchFromUrl = async (url)=>{\n        const result = await fetch(url);\n        const blobResult = result.blob();\n        return blobResult;\n    // } catch (err) {\n    //   console.log(err);\n    //   return false;\n    // }\n    };\n    const previewToBlob = async ()=>{\n        try {\n            if (!preview) {\n                throw new Error(\"No preview provided\");\n            }\n            let blob;\n            if (isBase64(preview)) {\n                blob = dataURLtoBlob(preview);\n            } else {\n                blob = await fetchFromUrl(preview);\n            }\n            return blob;\n        } catch (err) {\n            // customToast({ type: 'error', msg: err.message });\n            (0,_components_ui_use_toast__WEBPACK_IMPORTED_MODULE_1__.toast)({\n                variant: \"destructive\",\n                title: err.message || \"Something went wrong!!!\"\n            });\n            return false;\n        }\n    };\n    return previewToBlob();\n};\nconst getBlob = async (fileUri)=>{\n    try {\n        const resp = await fetch(fileUri);\n        const imageBody = await resp.blob();\n        return imageBody;\n    } catch (err) {\n        var _err;\n        return new Error((_err = err) === null || _err === void 0 ? void 0 : _err.message);\n    }\n};\nconst getExtension = (base64Data)=>{\n    if (base64Data.indexOf(_components_constant__WEBPACK_IMPORTED_MODULE_0__.S3BucketBaseUrl) !== -1) {\n        return base64Data.split(\".\").pop();\n    }\n    return base64Data.substring(\"data:image/\".length, base64Data.indexOf(\";base64\")).trim();\n};\nconst downloadImage = async (param)=>{\n    let { source, caption } = param;\n    var _res;\n    const res = await (0,axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n        url: \"https://tanish-app.s3.ap-south-1.amazonaws.com/\".concat(source),\n        method: \"GET\",\n        responseType: \"blob\"\n    }).catch((e)=>{\n        throw e;\n    });\n    const fileType = getExtension(source);\n    downloadFile({\n        fileBlob: (_res = res) === null || _res === void 0 ? void 0 : _res.data,\n        fileName: caption,\n        fileType: \"png\"\n    });\n};\nconst downloadFile = (param)=>{\n    let { fileBlob, fileName, fileType } = param;\n    const url = window.URL.createObjectURL(new Blob([\n        fileBlob\n    ]));\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.setAttribute(\"download\", \"\".concat(fileName, \".\").concat(fileType));\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n    link.style.display = \"none\";\n    window.URL.revokeObjectURL(url);\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/client-helper.ts\n"));

/***/ })

});